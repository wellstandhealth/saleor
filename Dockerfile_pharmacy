### Build and install packages
FROM python:3.9-slim-bookworm as build-python

RUN apt-get -y update \
  && apt-get install -y gettext \
  && apt-get install -y libmagic1 \
  && apt-get install -y libglib2.0-0 \
  && apt-get install -y libpango1.0-0 \
  # Cleanup apt cache
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Prep build key...fetched from cloudbuild step
COPY google-build-key.json /app/google-build-key.json

# Install Python dependencies
COPY pyproject.toml /app/
COPY poetry-docker.toml /app/poetry.toml
COPY poetry.lock /app/

RUN pip install poetry==1.7.0
RUN pip install wheel
RUN pip install keyrings.google-artifactregistry-auth

WORKDIR /app

# Set credentials to a key that is feteched from GCP cloud storage so we can pull from our repos
ENV GOOGLE_APPLICATION_CREDENTIALS=/app/google-build-key.json
ENV ENVIRONMENT_NAME=gcp-qa
ENV GOOGLE_PROJECT_NAME=non-production-381217

# install dependencies
RUN poetry install --only main --no-interaction --no-ansi --no-root

RUN rm /app/google-build-key.json

### Final image
FROM python:3.9-slim-bookworm

RUN groupadd -r saleor && useradd -r -g saleor saleor

RUN apt-get update \
  && apt-get -y upgrade \
  && apt-get install -y \
  libcairo2 \
  libgdk-pixbuf2.0-0 \
  liblcms2-2 \
  libopenjp2-7 \
  libpango-1.0-0 \
  libpangocairo-1.0-0 \
  libssl3 \
  libtiff6 \
  libwebp7 \
  libxml2 \
  libpq5 \
  shared-mime-info \
  mime-support \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

RUN echo 'image/webp webp' >> /etc/mime.types
RUN echo 'image/avif avif' >> /etc/mime.types

RUN mkdir -p /app/media /app/static \
  && chown -R saleor:saleor /app/

COPY --from=build-python /usr/local/lib/python3.9/site-packages/ /usr/local/lib/python3.9/site-packages/
COPY --from=build-python /usr/local/bin/ /usr/local/bin/
COPY saleor /app/saleor
COPY templates /app/templates
COPY manage.py /app/manage.py
WORKDIR /app

ARG STATIC_URL
ENV STATIC_URL ${STATIC_URL:-/static/}

EXPOSE 8000
ENV PYTHONUNBUFFERED 1

ARG COMMIT_ID
ARG PROJECT_VERSION
ENV PROJECT_VERSION="${PROJECT_VERSION}"
ENV DJANGO_SETTINGS_MODULE="saleor.pharmacy_settings"

CMD ["gunicorn", "--bind", ":8000", "--workers", "4", "--worker-class", "saleor.asgi.gunicorn_worker.UvicornWorker", "saleor.asgi:application"]
